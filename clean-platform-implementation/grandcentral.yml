# Grand Central Configuration
# This file configures the deployment of the platform services through Grand Central

project_name: clean-platform
team_name: platform-team
slack_channel: "#platform-support"
deploy_mechanism: kubernetes

# Docker build configuration
docker_build:
  build_args:
    BASE_IMAGE: cf-registry.nr-ops.net/newrelic/infrastructure-k8s-fips:1.33.2
  registry: cf-registry.nr-ops.net
  cache: true

# New Relic monitoring
new_relic:
  app_name: clean-platform
  license_key_secret: newrelic-license-key

# Change management integration
change_management:
  enabled: true
  types:
    - deployment
    - configuration
    - emergency

# Deployment hooks
deployment_hooks:
  pre_deploy:
    - name: suppress-alerts
      script: scripts/deployment-hooks/suppress-alerts.sh
    - name: backup-check
      script: scripts/deployment-hooks/backup-check.sh
  post_deploy:
    - name: health-check
      script: scripts/deployment-hooks/health-check.sh
    - name: smoke-tests
      script: scripts/deployment-hooks/smoke-tests.sh
  on_failure:
    - name: rollback
      script: scripts/deployment-hooks/rollback.sh
    - name: notify-team
      script: scripts/deployment-hooks/notify-failure.sh

# Grand Central API configuration
grand_central_api:
  staging_url: https://staging-grand-central.nr-ops.net
  production_url: https://grand-central.nr-ops.net
  auth_token_vault_path: secret/teams/platform-team/grand-central-token

# APM verification configuration
apm_verification:
  enabled: true
  rollback_on_failure: true
  check_duration_minutes: 60
  error_rate_threshold: 5
  response_time_threshold: 1000

# Environment configurations
environments:
  - name: development
    previous_environment: null
    auto_deploy_from_canary:
      enabled: false
    kubernetes:
      namespace: clean-platform-dev
      cell_assignment: staging
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
    instances: 1
    autoscaling:
      enabled: false
    env_vars:
      LOG_LEVEL: debug
      ENVIRONMENT: development
    secret_env_vars:
      - name: DATABASE_PASSWORD
        vault_name: db-password
      - name: API_KEY

  - name: staging
    previous_environment: development
    auto_deploy_from_canary:
      enabled: true
      wait_minutes: 60
    new_relic:
      account_id: "${STAGING_ACCOUNT_ID}"
      api_key: "${NEW_RELIC_API_KEY}"
    kubernetes:
      namespace: clean-platform-staging
      cell_assignment: staging
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 500m
    instances: 2
    autoscaling:
      enabled: true
      min_replicas: 2
      max_replicas: 6
      target_cpu_utilization: 70
    health_checks:
      liveness_probe:
        http_get:
          path: /healthz
          port: 8081
        initial_delay_seconds: 30
        period_seconds: 10
      readiness_probe:
        http_get:
          path: /readyz
          port: 8081
        initial_delay_seconds: 5
        period_seconds: 5
    env_vars:
      LOG_LEVEL: info
      ENVIRONMENT: staging
    secret_env_vars:
      - name: DATABASE_PASSWORD
        vault_name: db-password
      - name: API_KEY
      - name: REDIS_PASSWORD
    ingress_domains:
      - hostname: clean-platform-staging.${cell_name}.nr-ops.net
        cell_routing: true

  - name: production
    previous_environment: staging
    previous_environment_auto_deploy:
      enabled: true
      wait_minutes: 120
    canaries:
      - name: canary
        instances: 2
        percentage: 10
    auto_rollback:
      enabled: true
      check_duration_minutes: 30
      alerting_condition_entity_guids:
        - "${AVAILABILITY_ALERT_GUID}"
        - "${ERROR_RATE_ALERT_GUID}"
        - "${SLO_ALERT_GUID}"
    new_relic:
      account_id: "${PRODUCTION_ACCOUNT_ID}"
      api_key: "${NEW_RELIC_API_KEY}"
    kubernetes:
      namespace: clean-platform
      cell_assignment: production
      cells:
        - us-core-ops
        - us-alt-mule
      resources:
        requests:
          memory: 1Gi
          cpu: 500m
        limits:
          memory: 2Gi
          cpu: 1000m
    instances: 3
    autoscaling:
      enabled: true
      min_replicas: 3
      max_replicas: 20
      target_cpu_utilization: 60
      target_memory_utilization: 70
    health_checks:
      liveness_probe:
        http_get:
          path: /healthz
          port: 8081
        initial_delay_seconds: 30
        period_seconds: 10
        failure_threshold: 3
      readiness_probe:
        http_get:
          path: /readyz
          port: 8081
        initial_delay_seconds: 5
        period_seconds: 5
        success_threshold: 1
        failure_threshold: 3
    pod_disruption_budget:
      min_available: 2
    env_vars:
      LOG_LEVEL: info
      ENVIRONMENT: production
    secret_env_vars:
      - name: DATABASE_PASSWORD
        vault_name: db-password
      - name: API_KEY
      - name: REDIS_PASSWORD
      - name: ENCRYPTION_KEY
    ingress_domains:
      - hostname: clean-platform.${cell_name}.nr-ops.net
        cell_routing: true
      - hostname: api.clean-platform.nr-ops.net
        cell_routing: false
    deployment_windows:
      - start: "09:00"
        end: "17:00"
        timezone: "America/New_York"
        days: ["monday", "tuesday", "wednesday", "thursday", "friday"]

# Service registration for discovery
service_registration:
  enabled: true
  endpoints:
    - name: api
      port: 8080
      protocol: http
    - name: metrics
      port: 9090
      protocol: http

# Alert suppression during deployments
alert_suppression:
  enabled: true
  duration_minutes: 30

# VIP configuration for service discovery
vips:
  production:
    - "clean-platform.vip.cf.nr-ops.net"
  standard_vip: true
  vanity_vip: "platform.nr-ops.net"

# Entity synthesis for observability
entity_synthesis:
  domain: PLATFORM
  type: CLEAN_PLATFORM_SERVICE
  tags:
    - team: platform-team
    - service: clean-platform
    - tier: backend

# Kafka integration
kafka:
  enabled: true
  topics:
    - name: "platform-events"
      partitions: 12
      replication_factor: 3
    - name: "platform-metrics"
      partitions: 6
      replication_factor: 3

# Feature flags integration
feature_flags:
  enabled: true
  flags:
    - name: "platform-new-feature"
      default: false
    - name: "platform-beta-api"
      default: false

# Rate limiting configuration
rate_limiting:
  enabled: true
  service_tier: standard
  limits:
    - path: "/api/*"
      rate: 1000
      burst: 2000
    - path: "/metrics"
      rate: 100
      burst: 200

# SLO configuration
slos:
  - name: "API Availability"
    target: 99.9
    window: 7d
  - name: "Response Time"
    target: 95
    threshold: 500ms
    window: 7d

# Compliance tracking
compliance:
  fips_enabled: true
  container_security_scan: true
  vulnerability_threshold: high
  cis_benchmarks:
    - CIS-DI-0001
    - CIS-DI-0007
    - CIS-DI-0008
    - CIS-DI-0009
    - CIS-DI-0010