repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--allow-multiple-documents']
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: detect-aws-credentials
        args: ['--allow-missing-credentials']
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: name-tests-test
        args: ['--pytest-test-first']

  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3.9
        args: ['--line-length=100']

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=100']

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-redis
          - types-PyYAML
        args: ['--ignore-missing-imports']

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', '.bandit']
        exclude: 'tests/'

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: ['-x']

  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.2
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint
        args:
          - '--args=--config=__GIT_WORKING_DIR__/.tflint.hcl'
      - id: terraform_tfsec
        args:
          - '--args=--exclude-downloaded-modules'

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.26.3
    hooks:
      - id: check-github-workflows
      - id: check-github-actions

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: git-check
      - id: git-dirty
      - id: forbid-binary
        exclude: '.*\.(png|jpg|jpeg|gif|ico|pdf)$'
      - id: script-must-have-extension
      - id: script-must-not-have-extension
      - id: shellcheck
      - id: shfmt

  - repo: https://github.com/secretlint/secretlint
    rev: v7.0.7
    hooks:
      - id: secretlint
        entry: secretlint
        language: docker_image

  - repo: local
    hooks:
      - id: no-commit-to-main
        name: Prevent commits to main branch
        entry: bash -c 'if [[ "$(git rev-parse --abbrev-ref HEAD)" == "main" ]]; then echo "Direct commits to main branch are not allowed."; exit 1; fi'
        language: system
        pass_filenames: false
        always_run: true

      - id: requirements-txt-fixer
        name: Fix requirements.txt
        entry: bash -c 'find . -name "requirements*.txt" -exec sort -o {} {} \;'
        language: system
        pass_filenames: false

      - id: terraform-docs
        name: Generate Terraform docs
        entry: bash -c 'cd infrastructure/terraform && terraform-docs markdown . > README.md'
        language: system
        pass_filenames: false
        files: '\.tf$'

default_language_version:
  python: python3.9

exclude: |
  (?x)^(
    .*\.min\.(js|css)|
    .*\.map|
    node_modules/|
    venv/|
    \.git/|
    \.terraform/|
    \.pytest_cache/|
    __pycache__/|
    build/|
    dist/|
    .*\.egg-info/
  )$