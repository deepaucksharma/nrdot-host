apiVersion: v1
kind: Secret
metadata:
  name: nrdot-secrets
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: nrdot-host
type: Opaque
stringData:
  # New Relic License Key - Replace with your actual license key
  NEW_RELIC_LICENSE_KEY: "YOUR_NEW_RELIC_LICENSE_KEY_HERE"
  # API Authentication Token
  API_AUTH_TOKEN: "YOUR_API_AUTH_TOKEN_HERE"
  # Database connection string (if using external DB)
  DATABASE_URL: "postgresql://user:password@host:5432/nrdot"
---
apiVersion: v1
kind: Secret
metadata:
  name: nrdot-tls
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: nrdot-host
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: kubectl create secret tls nrdot-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Image Pull Secret for Private Registry
apiVersion: v1
kind: Secret
metadata:
  name: nrdot-registry-creds
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: registry
    app.kubernetes.io/part-of: nrdot-host
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {
      "auths": {
        "your-registry.io": {
          "username": "your-username",
          "password": "your-password",
          "email": "your-email@example.com",
          "auth": "base64-encoded-username:password"
        }
      }
    }