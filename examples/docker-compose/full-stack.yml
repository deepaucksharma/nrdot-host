version: '3.8'

services:
  # NRDOT-HOST with auto-configuration
  nrdot-host:
    image: nrdot-host:latest
    container_name: nrdot-host
    hostname: nrdot-host
    restart: unless-stopped
    privileged: true # Required for full system monitoring
    network_mode: host # Required for service discovery
    pid: host # Required for process monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nrdot/config:/etc/nrdot
      - ./nrdot/data:/var/lib/nrdot
      - ./nrdot/logs:/var/log/nrdot
    environment:
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - NRDOT_ENVIRONMENT=docker-compose
      - NRDOT_AUTO_CONFIG=true
      - LOG_LEVEL=info
      # Service credentials
      - MYSQL_MONITOR_USER=monitoring
      - MYSQL_MONITOR_PASS=monitoring123
      - POSTGRES_MONITOR_USER=monitoring
      - POSTGRES_MONITOR_PASS=monitoring123
      - REDIS_PASSWORD=redis123
      - ELASTICSEARCH_USER=elastic
      - ELASTICSEARCH_PASS=elastic123
      - RABBITMQ_USER=monitoring
      - RABBITMQ_PASS=monitoring123
    healthcheck:
      test: ["CMD", "nrdot-host", "status"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - mysql
      - postgres
      - redis
      - nginx
      - elasticsearch
      - rabbitmq

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=testdb
      - MYSQL_USER=monitoring
      - MYSQL_PASSWORD=monitoring123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  # PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=monitoring
      - POSTGRES_PASSWORD=monitoring123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c shared_preload_libraries=pg_stat_statements

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass redis123

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic123
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=monitoring
      - RABBITMQ_DEFAULT_PASS=monitoring123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # MongoDB (optional)
  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root123
      - MONGO_INITDB_DATABASE=testdb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Kafka (optional)
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

volumes:
  mysql_data:
  postgres_data:
  redis_data:
  nginx_logs:
  elasticsearch_data:
  rabbitmq_data:
  mongodb_data:
  kafka_data:
  zookeeper_data:

networks:
  default:
    name: nrdot-network