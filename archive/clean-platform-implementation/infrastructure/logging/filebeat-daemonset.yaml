apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: logging
data:
  filebeat.yml: |
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
        - drop_event:
            when:
              or:
                - equals:
                    kubernetes.namespace: "kube-system"
                - equals:
                    kubernetes.namespace: "kube-public"
                - equals:
                    kubernetes.namespace: "kube-node-lease"
        - decode_json_fields:
            fields: ["message"]
            max_depth: 1
            target: ""
            overwrite_keys: true
            add_error_key: true
        - timestamp:
            field: timestamp
            layouts:
              - '2006-01-02T15:04:05Z'
              - '2006-01-02T15:04:05.999Z'
            test:
              - '2024-01-15T10:30:45Z'
        - drop_fields:
            fields: ["agent", "ecs", "input", "host.name"]
            ignore_missing: true
    
    # System module for host logs
    - type: log
      enabled: true
      paths:
        - /var/log/syslog
        - /var/log/auth.log
      fields:
        log_type: system
      fields_under_root: true
      
    - type: log
      enabled: true
      paths:
        - /var/log/kern.log
      fields:
        log_type: kernel
      fields_under_root: true
    
    # Docker logs
    - type: docker
      containers.ids:
        - "*"
      processors:
        - add_docker_metadata: ~
        - drop_event:
            when:
              contains:
                docker.container.name: "POD"
    
    # Outputs
    output.logstash:
      hosts: ["logstash.logging:5044"]
      ssl.enabled: true
      ssl.certificate: "/usr/share/filebeat/certs/filebeat.crt"
      ssl.key: "/usr/share/filebeat/certs/filebeat.key"
      ssl.certificate_authorities: ["/usr/share/filebeat/certs/ca.crt"]
      bulk_max_size: 2048
      
    # Processors
    processors:
      - add_host_metadata:
          when.not.contains.tags: forwarded
      - add_docker_metadata: ~
      - add_kubernetes_metadata: ~
      - add_fields:
          target: ''
          fields:
            cluster.name: 'platform-prod'
            environment: 'production'
    
    # Logging
    logging.level: info
    logging.to_files: false
    logging.to_syslog: false
    logging.to_stderr: true
    
    # Monitoring
    monitoring.enabled: true
    monitoring.elasticsearch:
      hosts: ["https://elasticsearch-master:9200"]
      username: "elastic"
      password: "${ELASTIC_PASSWORD}"
      ssl.enabled: true
      ssl.certificate_authorities: ["/usr/share/filebeat/certs/ca.crt"]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: logging
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.11.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-credentials
              key: password
        securityContext:
          runAsUser: 0
          privileged: true
        resources:
          limits:
            memory: 500Mi
            cpu: 200m
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: certs
          mountPath: /usr/share/filebeat/certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: data
        hostPath:
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
      - name: certs
        secret:
          secretName: filebeat-certs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: logging
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io