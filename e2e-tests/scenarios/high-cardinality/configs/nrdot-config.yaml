# NRDOT Configuration for High Cardinality E2E Test
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        max_recv_msg_size_mib: 4
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  attributes:
    actions:
      - key: test.scenario
        value: high-cardinality
        action: upsert

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 400
    spike_limit_mib: 100

  # Cardinality limiting processor
  cardinality_limit:
    check_interval: 30s
    # Limit total unique metric series
    max_cardinality: 5000
    # Limit dimensions per metric
    max_dimensions: 8
    # Action when limit exceeded
    on_limit: drop_new
    # Track top cardinality contributors
    track_top_k: 100

  # Metric transformation to reduce cardinality
  metrics_transform:
    transforms:
      # Aggregate by removing high-cardinality labels
      - include: http_requests_total
        match_type: strict
        action: update
        operations:
          - action: aggregate_labels
            label_set: [method, status_code, region, environment]
            aggregation_type: sum
      
      # Convert histogram to summary percentiles
      - include: http_request_duration_seconds
        match_type: strict
        action: update
        operations:
          - action: aggregate_labels
            label_set: [method, status_code, region]
            aggregation_type: histogram

  # Filter out extreme cardinality labels
  attributes/filter:
    include:
      match_type: regexp
      attributes:
        - key: trace_id
          value: .*
        - key: session_id
          value: .*
        - key: request_id
          value: .*
    actions:
      - action: delete
        key: trace_id
      - action: delete
        key: session_id
      - action: delete
        key: request_id

  # Probabilistic sampling for high volume metrics
  probabilistic_sampler:
    sampling_percentage: 10.0

exporters:
  prometheus:
    endpoint: 0.0.0.0:8888
    namespace: nrdot
    const_labels:
      source: nrdot_cardinality_test
    # Prometheus specific limits
    enable_open_metrics: true
    resource_to_telemetry_conversion:
      enabled: true
    metric_expiration: 5m
    
  # Export to VictoriaMetrics for comparison
  otlphttp/victoria:
    endpoint: http://victoriametrics:8428/opentelemetry
    tls:
      insecure: true

  # File exporter for analysis
  file/metrics:
    path: /tmp/high_cardinality_metrics.json
    format: json
    rotation:
      max_megabytes: 10
      max_days: 1
      max_backups: 3

  debug:
    verbosity: detailed
    sampling_initial: 2
    sampling_thereafter: 500

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    
  zpages:
    endpoint: 0.0.0.0:55679

  # Performance profiler
  pprof:
    endpoint: 0.0.0.0:6060

service:
  extensions: [health_check, zpages, pprof]
  
  pipelines:
    metrics:
      receivers: [otlp]
      processors: 
        - memory_limiter
        - batch
        - attributes
        - attributes/filter
        - cardinality_limit
        - metrics_transform
        - probabilistic_sampler
      exporters: [prometheus, otlphttp/victoria, file/metrics, debug]
      
  telemetry:
    logs:
      level: info
      output_paths: ["stdout"]
      error_output_paths: ["stderr"]
    metrics:
      address: 0.0.0.0:8889
      level: detailed
      readers:
        - pull:
            exporter:
              prometheus:
                host: 0.0.0.0
                port: 8889