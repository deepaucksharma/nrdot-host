apiVersion: v1
kind: ConfigMap
metadata:
  name: nrdot-config
  namespace: nrdot-e2e
data:
  nrdot-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

      prometheus:
        config:
          scrape_configs:
            - job_name: 'kubernetes-pods'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: kubernetes_namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: kubernetes_pod_name

      k8s_cluster:
        auth_type: serviceAccount
        node_conditions_to_report: ["Ready", "MemoryPressure", "DiskPressure"]
        allocatable_types_to_report: ["cpu", "memory", "storage"]

      kubeletstats:
        auth_type: serviceAccount
        endpoint: https://${K8S_NODE_NAME}:10250
        insecure_skip_verify: true
        metric_groups:
          - node
          - pod
          - container

    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024

      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
          labels:
            - tag_name: app
              key: app
            - tag_name: component
              key: component
          annotations:
            - tag_name: workload
              key: workload.user.cattle.io/workloadselector

      resource:
        attributes:
          - key: k8s.cluster.name
            value: e2e-test-cluster
            action: upsert
          - key: deployment.environment
            value: kubernetes-e2e
            action: upsert

      resourcedetection:
        detectors: [env, system, gcp, eks, aks]
        timeout: 5s

    exporters:
      prometheus:
        endpoint: 0.0.0.0:8888
        namespace: nrdot_k8s
        const_labels:
          source: nrdot_daemonset

      otlp/tempo:
        endpoint: tempo.nrdot-e2e.svc.cluster.local:4317
        tls:
          insecure: true

      debug:
        verbosity: detailed
        sampling_initial: 5
        sampling_thereafter: 100

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
        
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [health_check, zpages]
      
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, k8sattributes, resource]
          exporters: [otlp/tempo, debug]
          
        metrics:
          receivers: [otlp, prometheus, k8s_cluster, kubeletstats]
          processors: [batch, k8sattributes, resource, resourcedetection]
          exporters: [prometheus]
          
      telemetry:
        logs:
          level: info
          output_paths: ["stdout"]