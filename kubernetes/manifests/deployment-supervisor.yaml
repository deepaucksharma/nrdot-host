apiVersion: apps/v1
kind: Deployment
metadata:
  name: nrdot-supervisor
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: supervisor
    app.kubernetes.io/part-of: nrdot-host
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2  # HA configuration
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: nrdot
      app.kubernetes.io/component: supervisor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nrdot
        app.kubernetes.io/component: supervisor
        app.kubernetes.io/part-of: nrdot-host
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nrdot-supervisor
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: wait-for-config
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z nrdot-config-engine 8081; do echo waiting for config-engine; sleep 2; done']
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
            - ALL
      containers:
      - name: supervisor
        image: docker.io/newrelic/nrdot-supervisor:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: health
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 8082
          protocol: TCP
        - name: api
          containerPort: 8083
          protocol: TCP
        env:
        - name: NRDOT_SUPERVISOR_CONFIG
          value: "/etc/nrdot/supervisor.yaml"
        - name: NRDOT_RESTART_STRATEGY
          value: "exponential"
        - name: NRDOT_MAX_RESTARTS
          value: "5"
        - name: NRDOT_LOG_LEVEL
          value: "info"
        - name: NRDOT_KUBERNETES_MODE
          value: "true"
        - name: NRDOT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NRDOT_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NRDOT_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        volumeMounts:
        - name: config
          mountPath: /etc/nrdot
          readOnly: true
        - name: supervisor-data
          mountPath: /var/lib/nrdot
        - name: temp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache/nrdot
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: nrdot-config
      - name: supervisor-data
        emptyDir: {}
      - name: temp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - supervisor
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "monitoring"
        effect: "NoSchedule"
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/component: supervisor