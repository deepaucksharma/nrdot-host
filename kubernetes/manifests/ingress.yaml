apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nrdot-api
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: api-server
    app.kubernetes.io/part-of: nrdot-host
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    # Cert-manager annotation for automatic TLS certificate
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # AWS ALB Ingress Controller annotations (if using ALB)
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/healthcheck-path: /health
    # alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    # alb.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.nrdot.example.com
    secretName: nrdot-api-tls
  rules:
  - host: api.nrdot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nrdot-api-internal
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nrdot-collector
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: collector
    app.kubernetes.io/part-of: nrdot-host
  annotations:
    # NGINX Ingress Controller annotations for gRPC
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/grpc-backend: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"  # Disable body size limit for streaming
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/limit-rps: "1000"
    nginx.ingress.kubernetes.io/limit-connections: "100"
    # Cert-manager annotation
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - collector.nrdot.example.com
    secretName: nrdot-collector-tls
  rules:
  - host: collector.nrdot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nrdot-collector-internal
            port:
              number: 4317
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nrdot-collector-http
  namespace: nrdot-system
  labels:
    app.kubernetes.io/name: nrdot
    app.kubernetes.io/component: collector
    app.kubernetes.io/part-of: nrdot-host
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/proxy-body-size: "32m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/limit-rps: "1000"
    nginx.ingress.kubernetes.io/limit-connections: "100"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* "^/v1/(metrics|traces|logs)") {
        proxy_pass http://upstream_balancer;
        break;
      }
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - collector-http.nrdot.example.com
    secretName: nrdot-collector-http-tls
  rules:
  - host: collector-http.nrdot.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nrdot-collector-internal
            port:
              number: 4318